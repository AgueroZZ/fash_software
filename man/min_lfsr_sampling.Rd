% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/05_lfsr.R
\name{min_lfsr_sampling}
\alias{min_lfsr_sampling}
\title{Compute Minimum Local False Sign Rate (LFSR) from Posterior Samples}
\usage{
min_lfsr_sampling(
  fash_fit,
  smooth_var = NULL,
  M = 3000,
  num_cores = 1,
  deriv = 0
)
}
\arguments{
\item{fash_fit}{A `fash` object containing posterior samples.}

\item{smooth_var}{A numeric vector specifying refined x values for prediction.
If `NULL`, defaults to the dataset's original x values.}

\item{M}{An integer specifying the number of posterior samples to generate. Default is `3000`.}

\item{num_cores}{An integer specifying the number of cores to use for parallel processing.
Default is `1` (sequential execution).}

\item{deriv}{An integer specifying the order of the derivative to compute. Default is `0`.}
}
\value{
A data frame containing:

\describe{
  \item{index}{The dataset index.}
  \item{min_lfsr}{The minimum LFSR computed for each dataset.}
  \item{fsr}{The cumulative false sign rate (FSR).}
}
}
\description{
This function computes the minimum local false sign rate (LFSR) for each dataset in a `fash` object.
It estimates the probability that the sign of the effect is positive or negative at each grid point
and returns a ranked data frame.
}
\examples{
# Example fash object (assuming it has been fitted)

# Compute min LFSR with sequential execution
result <- min_lfsr_sampling(fash_obj, num_cores = 1)

# Compute min LFSR with parallel execution
result_parallel <- min_lfsr_sampling(fash_obj, num_cores = 2)

}
